//=============================================================================
//
// マネージャー処理
// Author : YUUSAN KA
//--------------------------
//=============================================================================
//*****************************************************************************
//   インクルードファイル
//*****************************************************************************
#include "main.h"
#include "manager.h"
#include "renderer.h"
#include "input.h"

#include "camera.h"
#include "light.h"
#include "texture.h"
#include "sound.h"
#include "modelX.h"

#include "scene.h"
#include "scene2D.h"
#include "2D_sample.h"

#include "scene3D.h"
#include "3D_sample.h"

#include "sceneMesh.h"
#include "meshField.h"
#include "meshCube.h"

#include "sceneBillboard.h"
#include "BI_sample.h"

#include "sceneModelX.h"
#include "sceneMotionPartsX.h"
#include "player.h"

//*****************************************************************************
//   静的メンバー変数宣言
//*****************************************************************************
CRenderer *CManager::m_pRenderer = NULL;                      // レンダラー
CInputKeyboard *CManager::m_pInputKeyboard = NULL;            // キーボード入力
CInputMouse *CManager::m_pInputMouse = NULL;
CCamera *CManager::m_pCamera = NULL;
CLight *CManager::m_pLight = NULL;
CMeshField *CManager::m_pMeshField = NULL;
CSound *CManager::m_pSound = NULL;

//==================================================================================================================================================
//   コンストラクタ
//==================================================================================================================================================
CManager::CManager()
{
}

//==================================================================================================================================================
//   デストラクタ
//==================================================================================================================================================
CManager::~CManager()
{
}

//==================================================================================================================================================
// 初期化処理
//==================================================================================================================================================
HRESULT CManager::Init( HINSTANCE hInstance, HWND hWnd, BOOL bWindow )
{
	// レンダラーの生成
	m_pRenderer = new CRenderer;
	m_pRenderer->Init( hWnd, bWindow );

	// キーボードの生成
	m_pInputKeyboard = new CInputKeyboard;
	m_pInputKeyboard->Init( hInstance, hWnd );

	// マウスの生成
	m_pInputMouse = new CInputMouse;
	m_pInputMouse->Init(hInstance, hWnd);

	// サウンドの生成
	m_pSound = new CSound;
	m_pSound->Init(hWnd);

	// カメラの生成
	m_pCamera = new CCamera;
	m_pCamera->Init();

	// ライトの生成
	m_pLight = new CLight;
	m_pLight->Init();

	// テクスチャを読み込み
	CTexture::Init();
	CModelX::Init();

	//CMotionPartsX::Init();

	// オブジェクトの生成
	m_pMeshField = CMeshField::Create();
	CPlayer::Create(D3DXVECTOR3(0.0f,0.0f,0.0f));


	ImGui_ImplDX9_Init(hWnd, GetRenderer()->GetDevice());

	return S_OK;

}

//==================================================================================================================================================
// 終了処理
//==================================================================================================================================================
void CManager::Uninit(void)
{
	// オブジェクトの破棄
	CScene::ReleaseAll();

	if (m_pMeshField != NULL) { m_pMeshField->Uninit(); }

	//CMotionPartsX::Uninit();

	CModelX::Uninit();
	// テクスチャを破棄
	CTexture::Uninit();

	// カメラの破棄
	if (m_pCamera != NULL) { m_pCamera->Uninit(); }

	// ライトの破棄
	if (m_pLight != NULL) { m_pLight->Uninit(); }

	// サウンドの破棄
	if (m_pSound != NULL) { m_pSound->Uninit(); }

	// マウス入力の破棄
	if (m_pInputMouse != NULL) { m_pInputMouse->Uninit(); }

	// キーボード入力の破棄
	if( m_pInputKeyboard != NULL ) { m_pInputKeyboard->Uninit(); }

	// レンダラーの破棄
	if (m_pRenderer != NULL) { m_pRenderer->Uninit(); }
}

//==================================================================================================================================================
// 更新処理
//==================================================================================================================================================
void CManager::Update(void)
{
	// ImGuiを作成
	ImGui_ImplDX9_NewFrame();
	ImGui::Text("Application average %.3f ms/frame (%.1f FPS)", 1000.0f / ImGui::GetIO().Framerate, ImGui::GetIO().Framerate);

	m_pInputKeyboard->Update();		// キーボード入力
	m_pInputMouse->Update();		// マウス入力
	m_pLight->Update();				// ライト更新
	m_pCamera->Update();			// カメラ更新

	// 更新処理
	CScene::UpdateAll();        // シーン
}

//==================================================================================================================================================
// 描画処理
//==================================================================================================================================================
void CManager::Draw(void)
{
	m_pCamera->Set();		// カメラセット
	m_pLight->Set();		// ライトセット

	// 描画開始
	if (m_pRenderer->DrawBegin())
	{
		// 描画処理
		CScene::DrawAll();             // シーン

		//
		ImGui::Render();

		// 描画終了
		m_pRenderer->DrawEnd();
	}
}

//==================================================================================================================================================
// レンダラーの取得処理
//==================================================================================================================================================
CRenderer *CManager::GetRenderer(void)
{
	return m_pRenderer;                   // レンダラーのポインタを返す
}

//==================================================================================================================================================
// キーボード入力の取得処理
//==================================================================================================================================================
CInputKeyboard *CManager::GetInputKeyboard(void)
{
	return m_pInputKeyboard;		// キーボード入力のポインタを返す
}

//==================================================================================================================================================
// マウス入力の取得処理
//==================================================================================================================================================
CInputMouse *CManager::GetInputMouse(void)
{
	return m_pInputMouse;		// マウス入力のポインタを返す
}

//==================================================================================================================================================
// スコアの取得処理
//==================================================================================================================================================
CCamera *CManager::GetCamera(void)
{
	return m_pCamera;              // カメラのポインタを返す
}

//==================================================================================================================================================
// タイムの取得処理
//==================================================================================================================================================
CLight *CManager::GetLight(void)
{
	return m_pLight;              // ライトのポインタを返す
}

//==================================================================================================================================================
// 地面の取得処理
//==================================================================================================================================================
CMeshField *CManager::GetMeshField(void)
{
	return m_pMeshField;              // 地面のポインタを返す
}

